package pkg

import kotlin.jvm.internal.PropertyReference1
import kotlin.jvm.internal.PropertyReference1Impl
import kotlin.jvm.internal.Reflection
import kotlin.properties.ReadWriteProperty
import kotlin.reflect.KProperty

class TestDelegate implements Component {
   @JvmStatic
   @JvmSynthetic
   KProperty<Object>[] $$delegatedProperties = new KProperty[]{
      Reflection.property1((new PropertyReference1Impl(TestDelegate.class, "test", "getTest()Ljava/lang/String;", 0)) as PropertyReference1) as KProperty
   };
   private ReadWriteProperty test$delegate = TestDelegateKt.getFromComponent(this);
   private Lazy someExpensiveValue$delegate = LazyKt.lazy(<unknownclass>.INSTANCE);

   fun getTest(): String  {
      return this.test$delegate.getValue(this, $$delegatedProperties[0]) as String;// 1 10
   }

   fun getSomeExpensiveValue(): Int  {
      return (this.someExpensiveValue$delegate.getValue() as Number).intValue();// 12
   }
}

class 'pkg/TestDelegate' {
   method 'getTest ()Ljava/lang/String;' {
      0      18
      1      18
      2      18
      3      18
      4      18
      5      18
      6      18
      7      18
      8      18
      9      18
      a      18
      b      18
      c      18
      d      18
      e      18
      f      18
      10      18
      11      18
      12      18
   }

   method 'getSomeExpensiveValue ()I' {
      0      22
      1      22
      2      22
      3      22
      5      22
      6      22
      7      22
      8      22
      9      22
      a      22
      b      22
      c      22
      d      22
      e      22
      f      22
      10      22
      11      22
   }
}

Lines mapping:
1 <-> 19
10 <-> 19
12 <-> 23
